"0","### Pasar de hora local a solar"
"0","library(Diel.Niche)"
"0","library(tidyverse)"
"2","â”€â”€ [1mAttaching core tidyverse packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 2.0.0 â”€â”€
[32mâœ”[39m [34mdplyr    [39m 1.1.4     [32mâœ”[39m [34mreadr    [39m 2.1.5
[32mâœ”[39m [34mforcats  [39m 1.0.0     [32mâœ”[39m [34mstringr  [39m 1.5.1
[32mâœ”[39m [34mggplot2  [39m 3.5.0     [32mâœ”[39m [34mtibble   [39m 3.2.1
[32mâœ”[39m [34mlubridate[39m 1.9.3     [32mâœ”[39m [34mtidyr    [39m 1.3.1
[32mâœ”[39m [34mpurrr    [39m 1.0.2     "
"2","â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mâœ–[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mâœ–[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
[36mâ„¹[39m Use the ]8;;http://conflicted.r-lib.org/conflicted package]8;; to force all conflicts to become errors"
"0","horasolar <- function(datetime, longitude, timezone) {"
"0","  date_structure <- as.POSIXlt(as.POSIXct(datetime), tz = timezone)"
"0","  timezone_value <- date_structure$gmtoff / 3600"
"0","  "
"0","  N = yday(datetime) # DÃ­as del aÃ±o."
"0","  h = hour(datetime)"
"0","  mm = minute(datetime)"
"0","  ss = second(datetime)"
"0","  "
"0","  "
"0","  x=2*pi*(N-1-(h-12)/24)/365"
"0","  eqtime=229.18*(0.000075+0.001868*cos(x)-0.032077*sin(x)-0.014615*cos(2*x)-0.040849*sin(2*x))"
"0","  "
"0","  time_offset=eqtime-4*longitude+60*timezone_value"
"0","  tst=h*60+mm+ss/60-time_offset"
"0","  hours_ <- tst/60"
"0","  minutes_<- (hours_-floor(hours_))*60"
"0","  seconds_ = (minutes_ -floor(minutes_))*60"
"0","  # Para formatear"
"0","  hours_text <- abs(floor(hours_))"
"0","  minutes_text <- abs(floor(minutes_))"
"0","  seconds_text <- abs(floor(seconds_))"
"0","  "
"0","  "
"0","  "
"0","  hours_text <- ifelse(nchar(hours_text) < 2, paste0(""0"", hours_text), hours_text)"
"0","  minutes_text <- ifelse(nchar(minutes_text) < 2, paste0(""0"", minutes_text), minutes_text)"
"0","  seconds_text <- ifelse(nchar(seconds_text) < 2, paste0(""0"", seconds_text), seconds_text)"
"0","  resultado <- paste0(as.character(date(datetime)), "" "",hours_text, "":"", minutes_text, "":"", seconds_text) %>% "
"0","    as.POSIXct(., tz = timezone)"
"0","  "
"0","  return(resultado)"
"0","}"
"0",""
"0","to_decimal_time <- function(datetime) {"
"0","  decimal_time <- hour(datetime)+ minute(datetime)/60 + second(datetime)/3600"
"0","  return(decimal_time)"
"0","}"
"0",""
"0",""
"0","to_radians <- function(datetime) {"
"0","  decimal_time <- hour(datetime)+ minute(datetime)/60 + second(datetime)/3600"
"0","  radian_time <- decimal_time * ((2 * pi)/24)"
"0","  #plot(circular(decimal_time), units = ""hours"", template=""clock24"")"
"0","  #plot(circular(radian_time), units = ""radians"")"
"0","  return(radian_time)"
"0","}"
"0",""
"0",""
